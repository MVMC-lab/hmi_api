M128
***************************************


M128_HMI_put
============

呼叫介面
^^^^^^^^
:code:`char M128_HMI_put(int Bytes, char Type, void *Data_p)`


簡介
^^^^
    呼叫函式可以將存放於指標Data_p所指向之矩陣資料送向人機。

輸入參數
^^^^^^^^
    **Bytes**：欲送出資料bytes數大小，最大值為65535。

    **Type**：欲送出資料資料型態編號，請參考下方的Type資料型態對應表。

    **Data_p**：愈發送之矩陣資料記憶體起頭。

回傳
^^^^
    0：成功。

    1：錯誤，參數不合理。

Type資料型態對應表
^^^^^^^^^^^^^^^^^^^^^

+------+-------------+----------------------+----------------------------------+
| 編號 | 使用資料型態| 說明                 | avr-gcc中的變數型態              |
+======+=============+======================+==================================+
| 0    |  int8       |  8 bit 整數型態      | char, int8_t                     |
+------+-------------+----------------------+----------------------------------+
| 1    |  int16      | 16 bit 整數型態      | int, int16_t                     |
+------+-------------+----------------------+----------------------------------+
| 2    |  int32      | 32 bit 整數型態      | long int, int32_t                |
+------+-------------+----------------------+----------------------------------+
| 3    |  int64      | 64 bit 整數型態      | int64_t                          |
+------+-------------+----------------------+----------------------------------+
| 4    | uint8       |  8 bit正整數型態     | unsigned char, uint8_t           |
+------+-------------+----------------------+----------------------------------+
| 5    | uint16      | 16 bit正整數型態     | unsigned int, uint16_t           |
+------+-------------+----------------------+----------------------------------+
| 6    | uint32      | 32 bit 正整數型態    | unsigned long int, uint32_t      |
+------+-------------+----------------------+----------------------------------+
| 7    | uint64      | 64 bit 正整數型態    | uint64_t                         |
+------+-------------+----------------------+----------------------------------+
| 8    | float32     | 32 bit 浮點數型態    | float, double                    |
+------+-------------+----------------------+----------------------------------+
| 9    | float64     | 64 bit 浮點數型態    |                                  |
+------+-------------+----------------------+----------------------------------+

(avr-gcc中的float、double皆為32bits的浮點數)

M128_HMI_get
============

呼叫介面
^^^^^^^^
:code:`char M128_HMI_get(int Bytes, void *Data_p)`


簡介
^^^^
    呼叫函式可以由人機接收指定位元組數Bytes的資料，並存入指標\*Data_p所指記憶體內。

輸入參數
^^^^^^^^
    **Bytes**：欲接收資料bytes數大小，最大值為65535。

    **Data_p**：欲存放接收矩陣資料之變數指標位址。

回傳
^^^^
    0：成功。

    1：錯誤，參數不合理。

    2：錯誤：送收BYTES數不吻合，請檢察送收端bytes數是否吻合。

Type資料型態對應表
^^^^^^^^^^^^^^^^^^^^^

+------+-------------+----------------------+----------------------------------+
| 編號 | 使用資料型態| 說明                 | avr-gcc中的變數型態              |
+======+=============+======================+==================================+
| 0    |  int8       |  8 bit 整數型態      | char, int8_t                     |
+------+-------------+----------------------+----------------------------------+
| 1    |  int16      | 16 bit 整數型態      | int, int16_t                     |
+------+-------------+----------------------+----------------------------------+
| 2    |  int32      | 32 bit 整數型態      | long int, int32_t                |
+------+-------------+----------------------+----------------------------------+
| 3    |  int64      | 64 bit 整數型態      | int64_t                          |
+------+-------------+----------------------+----------------------------------+
| 4    | uint8       |  8 bit正整數型態     | unsigned char, uint8_t           |
+------+-------------+----------------------+----------------------------------+
| 5    | uint16      | 16 bit正整數型態     | unsigned int, uint16_t           |
+------+-------------+----------------------+----------------------------------+
| 6    | uint32      | 32 bit 正整數型態    | unsigned long int, uint32_t      |
+------+-------------+----------------------+----------------------------------+
| 7    | uint64      | 64 bit 正整數型態    | uint64_t                         |
+------+-------------+----------------------+----------------------------------+
| 8    | float32     | 32 bit 浮點數型態    | float, double                    |
+------+-------------+----------------------+----------------------------------+
| 9    | float64     | 64 bit 浮點數型態    |                                  |
+------+-------------+----------------------+----------------------------------+

(avr-gcc中的float、double皆為32bits的浮點數)

M128_HMI_Form_put
-----------------

呼叫介面
^^^^^^^^
:code:`char M128_HMI_Form_put(char *FormatString, int Bytes, void *Data_p)`

簡介
^^^^
    呼叫函式可以將存放於指標\*Data_p所指記憶體內、以"FormatString"指定不同形態及筆數組
    成之資料結構內容送向人機。

輸入參數
^^^^^^^^
    **FormatString**：由資料代碼及筆數所組成之字串，其中每一欄位，代表依總資料型態，
    由**Type資料型態代碼對應表**中的代碼表示，後接英文字母"x"及一個數字指其筆數。形態文字代碼
    。各欄間以","隔開。

    **Bytes**：欲接收資料bytes數大小，最大值為65535。

    **Data_p**：欲存放接收結構資料之變數指標位址。

回傳
^^^^
    0：成功

    1：錯誤

Type資料型態代碼對應表
^^^^^^^^^^^^^^^^^^^^^^

+------+-------------+----------------------+----------------------------------+
| 代碼 | 使用資料型態| 說明                 | avr-gcc中的變數型態              |
+======+=============+======================+==================================+
| i8   |  int8       |  8 bit 整數型態      | char, int8_t                     |
+------+-------------+----------------------+----------------------------------+
| i16  |  int16      | 16 bit 整數型態      | int, int16_t                     |
+------+-------------+----------------------+----------------------------------+
| i32  |  int32      | 32 bit 整數型態      | long int, int32_t                |
+------+-------------+----------------------+----------------------------------+
| i64  |  int64      | 64 bit 整數型態      | int64_t                          |
+------+-------------+----------------------+----------------------------------+
| ui8  | uint8       |  8 bit正整數型態     | unsigned char, uint8_t           |
+------+-------------+----------------------+----------------------------------+
| ui16 | uint16      | 16 bit正整數型態     | unsigned int, uint16_t           |
+------+-------------+----------------------+----------------------------------+
| ui32 | uint32      | 32 bit 正整數型態    | unsigned long int, uint32_t      |
+------+-------------+----------------------+----------------------------------+
| ui64 | uint64      | 64 bit 正整數型態    | uint64_t                         |
+------+-------------+----------------------+----------------------------------+
| f32  | float32     | 32 bit 浮點數型態    | float, double                    |
+------+-------------+----------------------+----------------------------------+
| f64  | float64     | 64 bit 浮點數型態    |                                  |
+------+-------------+----------------------+----------------------------------+


範例
^^^^
.. code-block:: C

    struct Ball {
        char color[10];
        float radius;
    }

    struct Ball ball1 = {"red", 5.0};

    M128_HMI_Form_put(“i8x10,f32x1”, &ball1); //10筆char,1筆float

M128_HMI_Form_get
-----------------

呼叫介面
^^^^^^^^
:code:`char M128_HMI_Form_get(char *FormatString, int Bytes, void *Data_p)`

簡介
^^^^
    呼叫函式可以將存放於指標\*Data_p所指記憶體內、以"FormatString"指定不同形態及筆數組
    成之資料結構內容送向人機。

輸入參數
^^^^^^^^
    **FormatString**：由資料代碼及筆數所組成之字串，其中每一欄位，代表依總資料型態，
    由**Type資料型態代碼對應表**中的代碼表示，後接英文字母"x"及一個數字指其筆數。形態文字代碼
    。各欄間以","隔開。

    **Bytes**：欲送出資料bytes數大小，最大值為65535。

    **Data_p**：愈發送之結構資料之記憶體。

回傳
^^^^
    0：成功

    1：錯誤

Type資料型態代碼對應表
^^^^^^^^^^^^^^^^^^^^^^

+------+-------------+----------------------+----------------------------------+
| 代碼 | 使用資料型態| 說明                 | avr-gcc中的變數型態              |
+======+=============+======================+==================================+
| i8   |  int8       |  8 bit 整數型態      | char, int8_t                     |
+------+-------------+----------------------+----------------------------------+
| i16  |  int16      | 16 bit 整數型態      | int, int16_t                     |
+------+-------------+----------------------+----------------------------------+
| i32  |  int32      | 32 bit 整數型態      | long int, int32_t                |
+------+-------------+----------------------+----------------------------------+
| i64  |  int64      | 64 bit 整數型態      | int64_t                          |
+------+-------------+----------------------+----------------------------------+
| ui8  | uint8       |  8 bit正整數型態     | unsigned char, uint8_t           |
+------+-------------+----------------------+----------------------------------+
| ui16 | uint16      | 16 bit正整數型態     | unsigned int, uint16_t           |
+------+-------------+----------------------+----------------------------------+
| ui32 | uint32      | 32 bit 正整數型態    | unsigned long int, uint32_t      |
+------+-------------+----------------------+----------------------------------+
| ui64 | uint64      | 64 bit 正整數型態    | uint64_t                         |
+------+-------------+----------------------+----------------------------------+
| f32  | float32     | 32 bit 浮點數型態    | float, double                    |
+------+-------------+----------------------+----------------------------------+
| f64  | float64     | 64 bit 浮點數型態    |                                  |
+------+-------------+----------------------+----------------------------------+


範例
^^^^
.. code-block:: C

    struct Ball {
        char color[10];
        float radius;
    }

    struct Ball ball1;

    M128_HMI_Form_get(“i8x10,f32x1”, &ball1); //10筆char,1筆float
